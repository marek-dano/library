plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.openapi.generator" version "7.8.0"
        id "com.benjaminsproule.swagger" version "1.0.8"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
}

dependencies {
    //spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    //swagger
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
    implementation 'io.swagger:swagger-annotations:1.6.14'

    //db
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2:1.4.200'

    //tools
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    //test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.gsonfire:gson-fire:1.8.5'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

}

swagger {
    apiSource {
        springmvc = true
        locations = ['com.example.library.controller']
        schemes = ['http', 'https']
        host = 'localhost:8080'
        basePath = '/'
        info {
            title = 'My API'
            version = 'v1'
        }
        swaggerDirectory = "$projectDir/src/main/resources"
        outputFormats = ['yaml']
        attachSwaggerArtifact = true
    }
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "$projectDir/src/main/resources/api-spec.yaml"
    outputDir = "$projectDir/build/generated"
    packageName = "com.example.library.codegen.api"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    dependsOn actions: [tasks.named('openApiGenerate')]
}

sourceSets.main.java.srcDirs += ['build/generated/src/main/java']
